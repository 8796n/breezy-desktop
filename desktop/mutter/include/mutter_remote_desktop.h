/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __MUTTER_REMOTE_DESKTOP_H__
#define __MUTTER_REMOTE_DESKTOP_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.Mutter.RemoteDesktop */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP (org_gnome_mutter_remote_desktop_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP, OrgGnomeMutterRemoteDesktop))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP, OrgGnomeMutterRemoteDesktopIface))

struct _OrgGnomeMutterRemoteDesktop;
typedef struct _OrgGnomeMutterRemoteDesktop OrgGnomeMutterRemoteDesktop;
typedef struct _OrgGnomeMutterRemoteDesktopIface OrgGnomeMutterRemoteDesktopIface;

struct _OrgGnomeMutterRemoteDesktopIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_create_session) (
    OrgGnomeMutterRemoteDesktop *object,
    GDBusMethodInvocation *invocation);

  guint  (*get_supported_device_types) (OrgGnomeMutterRemoteDesktop *object);

  gint  (*get_version) (OrgGnomeMutterRemoteDesktop *object);

};

GType org_gnome_mutter_remote_desktop_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_gnome_mutter_remote_desktop_interface_info (void);
guint org_gnome_mutter_remote_desktop_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_gnome_mutter_remote_desktop_complete_create_session (
    OrgGnomeMutterRemoteDesktop *object,
    GDBusMethodInvocation *invocation,
    const gchar *session_path);



/* D-Bus method calls: */
void org_gnome_mutter_remote_desktop_call_create_session (
    OrgGnomeMutterRemoteDesktop *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_call_create_session_finish (
    OrgGnomeMutterRemoteDesktop *proxy,
    gchar **out_session_path,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_call_create_session_sync (
    OrgGnomeMutterRemoteDesktop *proxy,
    gchar **out_session_path,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
guint org_gnome_mutter_remote_desktop_get_supported_device_types (OrgGnomeMutterRemoteDesktop *object);
void org_gnome_mutter_remote_desktop_set_supported_device_types (OrgGnomeMutterRemoteDesktop *object, guint value);

gint org_gnome_mutter_remote_desktop_get_version (OrgGnomeMutterRemoteDesktop *object);
void org_gnome_mutter_remote_desktop_set_version (OrgGnomeMutterRemoteDesktop *object, gint value);


/* ---- */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY (org_gnome_mutter_remote_desktop_proxy_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY, OrgGnomeMutterRemoteDesktopProxy))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY, OrgGnomeMutterRemoteDesktopProxyClass))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY, OrgGnomeMutterRemoteDesktopProxyClass))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_PROXY))

typedef struct _OrgGnomeMutterRemoteDesktopProxy OrgGnomeMutterRemoteDesktopProxy;
typedef struct _OrgGnomeMutterRemoteDesktopProxyClass OrgGnomeMutterRemoteDesktopProxyClass;
typedef struct _OrgGnomeMutterRemoteDesktopProxyPrivate OrgGnomeMutterRemoteDesktopProxyPrivate;

struct _OrgGnomeMutterRemoteDesktopProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgGnomeMutterRemoteDesktopProxyPrivate *priv;
};

struct _OrgGnomeMutterRemoteDesktopProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_gnome_mutter_remote_desktop_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgGnomeMutterRemoteDesktopProxy, g_object_unref)
#endif

void org_gnome_mutter_remote_desktop_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgGnomeMutterRemoteDesktop *org_gnome_mutter_remote_desktop_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgGnomeMutterRemoteDesktop *org_gnome_mutter_remote_desktop_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_gnome_mutter_remote_desktop_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgGnomeMutterRemoteDesktop *org_gnome_mutter_remote_desktop_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgGnomeMutterRemoteDesktop *org_gnome_mutter_remote_desktop_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON (org_gnome_mutter_remote_desktop_skeleton_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON, OrgGnomeMutterRemoteDesktopSkeleton))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON, OrgGnomeMutterRemoteDesktopSkeletonClass))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON, OrgGnomeMutterRemoteDesktopSkeletonClass))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SKELETON))

typedef struct _OrgGnomeMutterRemoteDesktopSkeleton OrgGnomeMutterRemoteDesktopSkeleton;
typedef struct _OrgGnomeMutterRemoteDesktopSkeletonClass OrgGnomeMutterRemoteDesktopSkeletonClass;
typedef struct _OrgGnomeMutterRemoteDesktopSkeletonPrivate OrgGnomeMutterRemoteDesktopSkeletonPrivate;

struct _OrgGnomeMutterRemoteDesktopSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgGnomeMutterRemoteDesktopSkeletonPrivate *priv;
};

struct _OrgGnomeMutterRemoteDesktopSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_gnome_mutter_remote_desktop_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgGnomeMutterRemoteDesktopSkeleton, g_object_unref)
#endif

OrgGnomeMutterRemoteDesktop *org_gnome_mutter_remote_desktop_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.Mutter.RemoteDesktop.Session */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION (org_gnome_mutter_remote_desktop_session_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION, OrgGnomeMutterRemoteDesktopSession))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION, OrgGnomeMutterRemoteDesktopSessionIface))

struct _OrgGnomeMutterRemoteDesktopSession;
typedef struct _OrgGnomeMutterRemoteDesktopSession OrgGnomeMutterRemoteDesktopSession;
typedef struct _OrgGnomeMutterRemoteDesktopSessionIface OrgGnomeMutterRemoteDesktopSessionIface;

struct _OrgGnomeMutterRemoteDesktopSessionIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_disable_clipboard) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_enable_clipboard) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_options);

  gboolean (*handle_notify_keyboard_keycode) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    guint arg_keycode,
    gboolean arg_state);

  gboolean (*handle_notify_keyboard_keysym) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    guint arg_keysym,
    gboolean arg_state);

  gboolean (*handle_notify_pointer_axis) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    gdouble arg_dx,
    gdouble arg_dy,
    guint arg_flags);

  gboolean (*handle_notify_pointer_axis_discrete) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    guint arg_axis,
    gint arg_steps);

  gboolean (*handle_notify_pointer_button) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    gint arg_button,
    gboolean arg_state);

  gboolean (*handle_notify_pointer_motion_absolute) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_stream,
    gdouble arg_x,
    gdouble arg_y);

  gboolean (*handle_notify_pointer_motion_relative) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    gdouble arg_dx,
    gdouble arg_dy);

  gboolean (*handle_notify_touch_down) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y);

  gboolean (*handle_notify_touch_motion) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y);

  gboolean (*handle_notify_touch_up) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    guint arg_slot);

  gboolean (*handle_selection_read) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GUnixFDList *fd_list,
    const gchar *arg_mime_type);

  gboolean (*handle_selection_write) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GUnixFDList *fd_list,
    guint arg_serial);

  gboolean (*handle_selection_write_done) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    guint arg_serial,
    gboolean arg_success);

  gboolean (*handle_set_selection) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_options);

  gboolean (*handle_start) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_stop) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_caps_lock_state) (OrgGnomeMutterRemoteDesktopSession *object);

  gboolean  (*get_num_lock_state) (OrgGnomeMutterRemoteDesktopSession *object);

  const gchar * (*get_session_id) (OrgGnomeMutterRemoteDesktopSession *object);

  void (*closed) (
    OrgGnomeMutterRemoteDesktopSession *object);

  void (*selection_owner_changed) (
    OrgGnomeMutterRemoteDesktopSession *object,
    GVariant *arg_options);

  void (*selection_transfer) (
    OrgGnomeMutterRemoteDesktopSession *object,
    const gchar *arg_mime_type,
    guint arg_serial);

};

GType org_gnome_mutter_remote_desktop_session_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_gnome_mutter_remote_desktop_session_interface_info (void);
guint org_gnome_mutter_remote_desktop_session_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_gnome_mutter_remote_desktop_session_complete_start (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_stop (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_keyboard_keycode (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_keyboard_keysym (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_pointer_button (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_pointer_axis (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_pointer_axis_discrete (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_pointer_motion_relative (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_pointer_motion_absolute (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_touch_down (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_touch_motion (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_notify_touch_up (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_enable_clipboard (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_disable_clipboard (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_set_selection (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_selection_write (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GUnixFDList *fd_list,
    GVariant *fd);

void org_gnome_mutter_remote_desktop_session_complete_selection_write_done (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation);

void org_gnome_mutter_remote_desktop_session_complete_selection_read (
    OrgGnomeMutterRemoteDesktopSession *object,
    GDBusMethodInvocation *invocation,
    GUnixFDList *fd_list,
    GVariant *fd);



/* D-Bus signal emissions functions: */
void org_gnome_mutter_remote_desktop_session_emit_closed (
    OrgGnomeMutterRemoteDesktopSession *object);

void org_gnome_mutter_remote_desktop_session_emit_selection_owner_changed (
    OrgGnomeMutterRemoteDesktopSession *object,
    GVariant *arg_options);

void org_gnome_mutter_remote_desktop_session_emit_selection_transfer (
    OrgGnomeMutterRemoteDesktopSession *object,
    const gchar *arg_mime_type,
    guint arg_serial);



/* D-Bus method calls: */
void org_gnome_mutter_remote_desktop_session_call_start (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_start_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_start_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_stop (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_stop_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_stop_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keycode (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_keycode,
    gboolean arg_state,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keycode_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keycode_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_keycode,
    gboolean arg_state,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keysym (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_keysym,
    gboolean arg_state,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keysym_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_keyboard_keysym_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_keysym,
    gboolean arg_state,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_pointer_button (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gint arg_button,
    gboolean arg_state,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_button_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_button_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gint arg_button,
    gboolean arg_state,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gdouble arg_dx,
    gdouble arg_dy,
    guint arg_flags,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gdouble arg_dx,
    gdouble arg_dy,
    guint arg_flags,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis_discrete (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_axis,
    gint arg_steps,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis_discrete_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_axis_discrete_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_axis,
    gint arg_steps,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_relative (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gdouble arg_dx,
    gdouble arg_dy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_relative_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_relative_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    gdouble arg_dx,
    gdouble arg_dy,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_absolute (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_absolute_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_pointer_motion_absolute_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_touch_down (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_down_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_down_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_touch_motion (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_motion_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_motion_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_stream,
    guint arg_slot,
    gdouble arg_x,
    gdouble arg_y,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_notify_touch_up (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_slot,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_up_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_notify_touch_up_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_slot,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_enable_clipboard (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant *arg_options,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_enable_clipboard_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_enable_clipboard_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant *arg_options,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_disable_clipboard (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_disable_clipboard_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_disable_clipboard_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_set_selection (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant *arg_options,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_set_selection_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_set_selection_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant *arg_options,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_selection_write (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_serial,
    GUnixFDList *fd_list,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_write_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant **out_fd,
    GUnixFDList **out_fd_list,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_write_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_serial,
    GUnixFDList  *fd_list,
    GVariant **out_fd,
    GUnixFDList **out_fd_list,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_selection_write_done (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_serial,
    gboolean arg_success,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_write_done_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_write_done_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    guint arg_serial,
    gboolean arg_success,
    GCancellable *cancellable,
    GError **error);

void org_gnome_mutter_remote_desktop_session_call_selection_read (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_mime_type,
    GUnixFDList *fd_list,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_read_finish (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    GVariant **out_fd,
    GUnixFDList **out_fd_list,
    GAsyncResult *res,
    GError **error);

gboolean org_gnome_mutter_remote_desktop_session_call_selection_read_sync (
    OrgGnomeMutterRemoteDesktopSession *proxy,
    const gchar *arg_mime_type,
    GUnixFDList  *fd_list,
    GVariant **out_fd,
    GUnixFDList **out_fd_list,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *org_gnome_mutter_remote_desktop_session_get_session_id (OrgGnomeMutterRemoteDesktopSession *object);
gchar *org_gnome_mutter_remote_desktop_session_dup_session_id (OrgGnomeMutterRemoteDesktopSession *object);
void org_gnome_mutter_remote_desktop_session_set_session_id (OrgGnomeMutterRemoteDesktopSession *object, const gchar *value);

gboolean org_gnome_mutter_remote_desktop_session_get_caps_lock_state (OrgGnomeMutterRemoteDesktopSession *object);
void org_gnome_mutter_remote_desktop_session_set_caps_lock_state (OrgGnomeMutterRemoteDesktopSession *object, gboolean value);

gboolean org_gnome_mutter_remote_desktop_session_get_num_lock_state (OrgGnomeMutterRemoteDesktopSession *object);
void org_gnome_mutter_remote_desktop_session_set_num_lock_state (OrgGnomeMutterRemoteDesktopSession *object, gboolean value);


/* ---- */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY (org_gnome_mutter_remote_desktop_session_proxy_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY, OrgGnomeMutterRemoteDesktopSessionProxy))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY, OrgGnomeMutterRemoteDesktopSessionProxyClass))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY, OrgGnomeMutterRemoteDesktopSessionProxyClass))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_PROXY))

typedef struct _OrgGnomeMutterRemoteDesktopSessionProxy OrgGnomeMutterRemoteDesktopSessionProxy;
typedef struct _OrgGnomeMutterRemoteDesktopSessionProxyClass OrgGnomeMutterRemoteDesktopSessionProxyClass;
typedef struct _OrgGnomeMutterRemoteDesktopSessionProxyPrivate OrgGnomeMutterRemoteDesktopSessionProxyPrivate;

struct _OrgGnomeMutterRemoteDesktopSessionProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgGnomeMutterRemoteDesktopSessionProxyPrivate *priv;
};

struct _OrgGnomeMutterRemoteDesktopSessionProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_gnome_mutter_remote_desktop_session_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgGnomeMutterRemoteDesktopSessionProxy, g_object_unref)
#endif

void org_gnome_mutter_remote_desktop_session_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgGnomeMutterRemoteDesktopSession *org_gnome_mutter_remote_desktop_session_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgGnomeMutterRemoteDesktopSession *org_gnome_mutter_remote_desktop_session_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_gnome_mutter_remote_desktop_session_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgGnomeMutterRemoteDesktopSession *org_gnome_mutter_remote_desktop_session_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgGnomeMutterRemoteDesktopSession *org_gnome_mutter_remote_desktop_session_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON (org_gnome_mutter_remote_desktop_session_skeleton_get_type ())
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON, OrgGnomeMutterRemoteDesktopSessionSkeleton))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON, OrgGnomeMutterRemoteDesktopSessionSkeletonClass))
#define ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON, OrgGnomeMutterRemoteDesktopSessionSkeletonClass))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON))
#define IS_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_GNOME_MUTTER_REMOTE_DESKTOP_SESSION_SKELETON))

typedef struct _OrgGnomeMutterRemoteDesktopSessionSkeleton OrgGnomeMutterRemoteDesktopSessionSkeleton;
typedef struct _OrgGnomeMutterRemoteDesktopSessionSkeletonClass OrgGnomeMutterRemoteDesktopSessionSkeletonClass;
typedef struct _OrgGnomeMutterRemoteDesktopSessionSkeletonPrivate OrgGnomeMutterRemoteDesktopSessionSkeletonPrivate;

struct _OrgGnomeMutterRemoteDesktopSessionSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgGnomeMutterRemoteDesktopSessionSkeletonPrivate *priv;
};

struct _OrgGnomeMutterRemoteDesktopSessionSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_gnome_mutter_remote_desktop_session_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgGnomeMutterRemoteDesktopSessionSkeleton, g_object_unref)
#endif

OrgGnomeMutterRemoteDesktopSession *org_gnome_mutter_remote_desktop_session_skeleton_new (void);


G_END_DECLS

#endif /* __MUTTER_REMOTE_DESKTOP_H__ */
